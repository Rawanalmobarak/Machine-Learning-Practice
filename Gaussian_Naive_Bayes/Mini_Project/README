Create and train a Naive Bayes classifier in naive_bayes/nb_author_id.py. 
Use it to make predictions for the test set. What is the accuracy?


- Remember there's a accuracy_score function in the sklearn library (from sklearn.metrics import accuracy_score)

- since sklearn.cross_validation deprecated in version 0.20, changed cross_validation to
from sklearn.model_selection import train_test_split



An important topic that we didnâ€™t explicitly talk about is the time to train and test our algorithms. 
Put in two lines of code, above and below the line fitting your classifier, like this:

t0 = time()
< your clf.fit() line of code >
print "training time:", round(time()-t0, 3), "s"

Put similar lines of code around the clf.predict() line of code, 
so you can compare the time to train the classifier and to make predictions with it. What is faster, training or prediction?


Prediction is faster
